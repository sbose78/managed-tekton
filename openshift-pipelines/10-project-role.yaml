apiVersion: v1
kind: Namespace
metadata:
  name: projectrole-controller
spec:
  finalizers:
  - kubernetes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grant-argocd
  namespace: projectrole-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: controller-manager
  namespace: projectrole-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: projectrole-role
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - "configmaps"
  verbs:
  - "*"
- apiGroups:
  - "coordination.k8s.io"
  resources:
  - "*"
  verbs:
  - "*"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: projectrole
subjects:
  - kind: ServiceAccount
    name: controller-manager
    namespace: projectrole-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: projectrole-role
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: projectrole-controller
  name: controller-manager
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      creationTimestamp: null
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 20Mi
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: manager
          command:
            - /manager
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: File
          image: >-
            docker.io/sbose78/project-roles-controller@sha256:c0e58f9c29e5ac762573d17fbf96892477be155c9869b299e42b4205788af8c4
          args:
            - '--leader-elect'
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      dnsPolicy: ClusterFirst
      serviceAccountName: controller-manager
      serviceAccount: controller-manager
      securityContext:
        runAsNonRoot: true
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
